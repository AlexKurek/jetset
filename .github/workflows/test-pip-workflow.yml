name: pip test

on:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false
      skip_test:
        description: skip test
        required: false

jobs:
  clone:
    runs-on: ubuntu-latest
    steps:
    - name: 'Clone Repository (Latest)'
      uses: actions/checkout@v2

    - name: 'Clone Repository (Custom Ref)'
      uses: actions/checkout@v2
      if: github.event.inputs.git-ref != ''
      with:
        ref: ${{ github.event.inputs.git-ref }}


  build_pip:
    needs: [clone]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [ 3.8]
        #os: [ubuntu-latest, macos-10.15]
        #python-version: [3.7,3.8,3.9]

    steps:
      - name: 'Clone Repository (Latest)'
        uses: actions/checkout@v2

      - name: 'Clone Repository (Custom Ref)'
        uses: actions/checkout@v2
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}

      - name: 'set env JETSETBESSELBUILD'
        run: |
          echo "FALSE">JETSETBESSELBUILD
          echo "JETSETBESSELBUILD=$(cat JETSETBESSELBUILD)" >> $GITHUB_ENV

      - name: 'echo env TEST'
        run: |
          echo "JETSETBESSELBUILD=${{ env.JETSETBESSELBUILD }}"


      - name: 'Install swig'
        run: |
           if [ "$RUNNER_OS" == "Linux" ]; then
                sudo apt-get update; sudo apt-get install swig
           elif [ "$RUNNER_OS" == "macOS" ]; then
                brew install swig
           else
                echo "$RUNNER_OS not supported"
                exit 1
           fi

      - name: 'Setup pip'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: 'adapt req'
        run: |
          python .github/workflows/adapt_reqirements_to_git_action.py

      - name: 'Install dependencies'
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: 'pip build'
        run: |
          echo "JETSETBESSELBUILD=${{ env.JETSETBESSELBUILD }}"
          python setup.py clean
          echo "JETSETBESSELBUILD=${{ env.JETSETBESSELBUILD }}"
      
      - name: 'pip build install sdist'
        run: |
          python setup.py sdist 
          pip install dist/*.tar.gz
          
      - name: 'test sdist'
        working-directory: .github/action_test/
        run: |
          echo $(running tests!)
          pytest --disable-warnings  --pyargs  -vvv jetset.tests.test_users::TestUser

      

      - name: 'pip build install wheel'
        run: |
          pip uninstall --yes jetset
          python setup.py clean 
          python setup.py  bdist_wheel 
          pip install dist/*.whl

      - name: 'test'
        if: github.event.inputs.skip_test != 'yes'
        working-directory: .github/action_test/
        run: |
          echo $(running tests!)
          pytest  --pyargs -vvv jetset.tests.test_hadronic_energetic
          pytest  --pyargs -vvv jetset.tests.test_integration::TestIntegration
