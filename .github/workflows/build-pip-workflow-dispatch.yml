name: pip build-test

on:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-10.15]
        python-version: [3.8]

    steps:
      - name: Clone Repository (Latest)
        uses: actions/checkout@v2

      - name: Clone Repository (Custom Ref)
        uses: actions/checkout@v2
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}

     # - name: Set env TEST
     #   run: echo "::set-env name=TEST::$(cat test-path.txt)"

     # - name: Print env TEST
     #   run: |
     #     echo "TEST=${TEST}"
     #     printenv

     # - uses: actions/upload-artifact@v2
     #   with:
     #     name: ${{ matrix.os }}-TEST
     #     path: ${{ env.TEST }}
      - name: Install swig
        run: |
             if [ "$RUNNER_OS" == "Linux" ]; then
                  sudo apt-get update; sudo apt-get install swig
             elif [ "$RUNNER_OS" == "macOS" ]; then
                  brew install swig
             else
                  echo "$RUNNER_OS not supported"
                  exit 1
             fi

      - name: Setup pip
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set env JETSETBESSELBUILD
        run: |
          echo "FALSE" >> $JETSETBESSELBUILD
      - name: Print env JETSETBESSELBUILD
        run: |
          echo "JETSETBESSELBUILD=${JETSETBESSELBUILD}"
          printenv

      - name: pip build
        run: |
          python setup.py clean
          python setup.py sdist bdist_wheel
          python setup.py install

      #- name: test
      #  run: |
      #    pytest --pyargs jetset.tests.test_functions::test_short

      - name: Set env PKG_VERSION
        run: echo "$(cd ../../ && python -c "import jetset;print(jetset.__version__)")">>$  PKG_VERSION

      - name: Print env PKG_VERSION
        run: |
          echo "PKG_VERSION=${PKG_VERSION}"
          printenv

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ env.PKG_VERSION }}-package
          path: dist/*
          #path: ${{ env.CONDABUILDJETSET }}

